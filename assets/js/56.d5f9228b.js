(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{750:function(s,n,e){"use strict";e.r(n);var a=e(5),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一、初始express"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、初始express"}},[s._v("#")]),s._v(" 一、初始express")]),s._v(" "),e("p",[s._v("作用:Express的作用和node.js内置的http模块类似 是专门用来创建web服务器的"),e("br"),s._v("\nhttp内置模块和express的关系:类似于浏览器中web api 和 jquery的关系。后者是基于前者进一步封装出来的")]),s._v(" "),e("h2",{attrs:{id:"二、路由的概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、路由的概念"}},[s._v("#")]),s._v(" 二、路由的概念")]),s._v(" "),e("p",[s._v("路由匹配的注意点:"),e("br"),s._v("\n 1.按照定义的先后顺序进行匹配\n 2.请求类型和请求的url同时匹配成功 才会调用对应的处理函数")]),s._v(" "),e("h2",{attrs:{id:"三、express中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、express中间件"}},[s._v("#")]),s._v(" 三、express中间件")]),s._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 中间件的概念\n      Express的中间件,本质上就是一个function处理函数\n      var express = require('express')\n      var app = express()\n      app.get('',function(req,res,next){\n\n      })\n      中间件函数的形参列表中 必须包含next参数 而路由处理函数中只包含req和res\n    --\x3e")]),s._v("\n\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 了解中间件的使用注意事项 --\x3e")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- \n      1.一定要在路由之前注册中间件\n      2.客户端发送过来请求,可以连续调用多个中间件进行处理\n      3.执行完中间件的业务代码之后,不要忘记调用next()函数\n      4.为了防止代码逻辑混乱,调用next()函数后不要再写额外的代码\n      5.连续调用多个中间件时,多个中间件之前,共享req和res对象\n     --\x3e")]),s._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 中间件的分类 --\x3e")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- \n      1.应用级别的中间件\n      app.use()/app.get()/app.post()\n      2.路由级别的中间件\n      router.use()\n      3.错误级别的中间件\n      作用:专门用来捕获整个项目发生的异常错误,防止项目异常崩溃的问题\n      格式:形参从前到后分别是(err,req,res,next)\n      必须注册在所有路由之后\n      4.Express内置的中间件\n       4.1 express.static 快速托管静态资源的内置中间件\n       4.2 express.json 解析JSON格式的请求体数据\n       4.3 express.urlencoded解析URL-encoded格式的请求体数据\n      5.第三方的中间件\n     --\x3e")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("h2",{attrs:{id:"四、中间件和路由的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、中间件和路由的使用"}},[s._v("#")]),s._v(" 四、中间件和路由的使用")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/huzhenpeng-web/Node.js/tree/main/08-express/js",target:"_blank",rel:"noopener noreferrer"}},[s._v("查看详细"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);